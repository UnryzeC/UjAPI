1. New Natives:
    native GetCommandTime									takes nothing returns integer // This affects TurnData flushing intervals, the lower the value, the faster it is, default: 50. (originally: <= 1.27a -> 200 | >= 1.27b -> 62 )
    native SetCommandTime									takes integer value returns nothing
    //
    native CopyAbility										takes ability whichAbility returns ability
    native CopyAbilityStats									takes ability toAbility, ability fromAbility returns nothing
    //
    native CopyBuff											takes buff whichBuff returns buff
    native CopyBuffStats									takes buff toBuff, buff fromBuff returns nothing
    //
    native CopyProjectile									takes projectile whichProjectile returns projectile
    native CopyProjectileStats								takes projectile toProjectile, projectile fromProjectile returns nothing
    // timerIndex: 0 - React | 1 - Cooldown | 2 - Damage Point (delay) | 3 - Backswing | 4 - Guard | 5 - Acquire | 6 - In Combat | 7-15 - Unpathable Target
    // timeType: 0 - Timeout/Duration | 1 - Period | 2 - Remaining | 3 - Elapsed (this cannot be set)
    native GetUnitAttackTimerTimeByIndex					takes unit whichUnit, integer timerIndex, integer timeType returns real
    native SetUnitAttackTimerTimeByIndex					takes unit whichUnit, integer timerIndex, integer timeType, real time returns nothing
2. Added internal desync detector, this one actually correctly reports desyncs.
3. CAgentTimer.cpp and CAgentTimerExtended.cpp cleaned up.
4. Re-introduced CNetPacketUnlocker, it wasn't active before. This mostly affects TOTAL amount of data that can be handled at once.
5. Rewritten Net::NetClient::FlushUnsentTurns, lowered ms delay for < 1.27b from 200/from 62 for 1.27b and 1.28f to 50.
6. Even more QoL changes and code optimisation.
7. Added CDataStore::SendEvent hook, now all of the packets are handled by UjAPI.
8. Added CNetData::SendOutgoingCommands hook, now all commands are handled by UjAPI.
9. Fixed unit getting paused whenever an item was dropped due to any reason.
10. Fixed RefreshBuff crash, this was related to incorrect handling in CAgentTimerExtended.
